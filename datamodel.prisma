type User {
id: ID! @id
gender: String!
email: String! @unique 
password: String! 
phone: String! @unique
name: String! @unique
birth: String! 
companyName: String 
companyRole: String
geoLocation: String  
tags: [String!] @scalarList(strategy:RELATION)
profileImgLocation: String
cardImgLocation: String
bio: String
myLikes: [User!] @relation(name: "LikesOfUser")
likedBy: [User!] @relation(name: "LikesOfUser")
myUnlikes: [User!] @relation(name: "UnLikesOfUser")
unlikedBy: [User!] @relation(name: "UnLikesOfUser")
distance: Int! @default(value:5)
rooms: [Room!]
reports:[Report!]
}


 


type Room {
id: ID! @id
participants: [User!]!
messages: [Message!]
createdAt: DateTime! @createdAt
}

type Message {
  id: ID! @id
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  room: Room!
  createdAt: DateTime! @createdAt
}


type Report {
id: ID! @id
participants: [User!]!
messages: [ReportMessage!]!
createdAt: DateTime! @createdAt
}

type ReportMessage {
id: ID! @id
text: String!
from: User! @relation(name: "ReportFrom")
to: User! @relation(name: "ReportTo")
report: Report!
createdAt: DateTime! @createdAt
}


